name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  REGISTRY: "registry.digitalocean.com/chaoss-badging"
  IMAGE_NAME: "badging-bot-v2"
    
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        
      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
            

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
        
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      env:
        DO_TOKEN: ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}}
        IMAGE: $(echo $IMAGE_NAME)
        REGISTRY: $(echo $REGISTRY)
        
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        script_stop: true
        envs: DO_TOKEN, IMAGE, REGISTRY
        script: |
          docker login -u $DO_TOKEN -p $DO_TOKEN registry.digitalocean.com
          docker stop $IMAGE
          docker rm $IMAGE
          docker run -d \
            --restart always \
            --name $IMAGE_NAME \
            $REGISTRY/$IMAGE_NAME:$(echo $GITHUB_SHA | head -c7)
